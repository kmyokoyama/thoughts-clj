(ns thoughts.application.port.protocol.service)

(defprotocol UserService
  (login [service user-id])
  (logout [service session-id])
  (logout-all [service user-id])
  (new-user? [service email])
  (user-exists? [service user-id])
  (username-available? [service username])
  (password-match? [service user-id password])
  (create-user [service name email username password])
  (get-user-by-id [service user-id])
  (follow [service follower-id followed-id])
  (unfollow [service follower-id followed-id])
  (get-following [service follower-id])
  (get-followers [service followed-id]))

(defprotocol ThoughtService
  (thought [service user-id text])
  (get-thought-by-id [service thought-id])
  (get-thoughts-by-user [service user-id])
  (get-thoughts-with-hashtag [service hashtag])
  (reply [service user-id text source-thought-id])
  (get-replies-by-thought-id [service source-thought-id])
  (rethought [service user-id source-thought-id])
  (rethought-with-comment [service user-id comment source-thought-id])
  (get-rethought-by-id [service rethought-id])
  (get-rethoughts-by-thought-id [service source-thought-id])
  (like [service user-id thought-id])
  (unlike [service user-id thought-id])
  (get-feed [service user-id limit offset]))
